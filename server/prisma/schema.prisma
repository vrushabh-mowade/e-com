
generator client {
  provider        = "prisma-client-js"
  engineType      = "library" // Use the library engine for edge environments
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Product {
    id             String                   @id @default(uuid())
    slug           String                   @unique
    title          String
    mainImage      String
    price          Int                      @default(0)
    rating         Int                      @default(0)
    description    String
    manufacturer   String
    inStock        Int                      @default(1)
    categoryId     String
    category       Category                 @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    customerOrders customer_order_product[]
    Wishlist       Wishlist[]
    images         Image[]
    createdAt      DateTime                 @default(now())
    updatedAt      DateTime                 @updatedAt
}

model Image {
    id        String  @id @default(uuid())
    productId String
    url       String
    altText   String?
    product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model User {
    id        String     @id @default(uuid())
    email     String     @unique
    password  String?
    role      String?    @default("user")
    Wishlist  Wishlist[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    firstName String?
    lastName  String?
}

model Customer_order {
    id          String                   @id @default(uuid())
    name        String
    lastname    String
    phone       String
    email       String
    company     String
    address     String
    apartment   String
    postalCode  String
    dateTime    DateTime?                @default(now())
    status      String
    city        String
    country     String
    orderNotice String?
    total       Int
    products    customer_order_product[]
}

model customer_order_product {
    id              String         @id @default(uuid())
    customerOrder   Customer_order @relation(fields: [customerOrderId], references: [id])
    customerOrderId String
    product         Product        @relation(fields: [productId], references: [id])
    productId       String
    quantity        Int
}

model Category {
    id          String    @id @default(uuid())
    name        String    @unique
    products    Product[] // Define a one-to-many relationship
    description String?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model Wishlist {
    id        String  @id @default(uuid())
    product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId String
    user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String

    @@unique([productId, userId])
}
